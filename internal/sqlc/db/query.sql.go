// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package db

import (
	"context"
)

const cleanupSessions = `-- name: CleanupSessions :exec
DELETE FROM Sessions WHERE expires <= ?
`

func (q *Queries) CleanupSessions(ctx context.Context, expires int64) error {
	_, err := q.db.ExecContext(ctx, cleanupSessions, expires)
	return err
}

const createUser = `-- name: CreateUser :one
INSERT INTO Users (id, created, email, name) VALUES (?, ?, ?, ?) RETURNING id, created, email, name
`

type CreateUserParams struct {
	ID      []byte
	Created int64
	Email   string
	Name    string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.ID,
		arg.Created,
		arg.Email,
		arg.Name,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Created,
		&i.Email,
		&i.Name,
	)
	return i, err
}
